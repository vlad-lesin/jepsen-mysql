[mysqld]
bind-address = %IP%
max_connections = 4096
# caching_sha2_password requires us to set up a whole CA and do cert exchange,
# which is exhausting
default_authentication_plugin=mysql_native_password

[mariadb]
tmpdir = %TMPDIR%
socket = %SOCKET%
port = %PORT%
pid_file=%PID_FILE%
log_error=%ERROR_LOG%
datadir=%DATA_DIR%
general_log
log-bin
server_id = %SERVER_ID%
log-basename = jepsen
binlog-format = %BINLOG_FORMAT%
#binlog-group-commit-sync-delay = 30
# Per an email from Jean-François Gagné, using COMMIT_ORDER here might recover
# safety even with replica-preserve-commit-order off.
binlog-transaction-dependency-tracking = %BINLOG_TRANSACTION_DEPENDENCY_TRACKING%
#log-statements-unsafe-for-binlog = OFF

# This option lets you turn off ordered replication, in case you don't want
# serializability to work for some reason
replica-preserve-commit-order	= %REPLICA_PRESERVE_COMMIT_ORDER%

# Make absolutely sure nobody writes to secondaries
super_read_only = %SUPER_READ_ONLY%

# so apparently crash safety is not the default and you have to turn on a
# bunch of extra options?????? !???
#enforce_gtid_consistency = ON
#gtid_mode = ON
#sync_relay_log = 1 # what on earth, why is this default so high if it's unsafe?
#relay_log_recovery = ON # Also not the default for some reason? Why????

# Not entirely sure whether/how this comes into play given deadlock detection,
# but I can't think of a scenario where we want 50-second txn stalls
innodb_lock_wait_timeout = 1

# Intentionally lowerable for verifying lazyfs is working
innodb_flush_log_at_trx_commit = %INNODB_FLUSH_LOG_AT_TRX_COMMIT%
innodb_flush_log_at_timeout = 60
